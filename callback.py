from aiogram import types, Dispatcher
from aiogram.types import Message
from aiogram.filters import Command
from aiogram import F
from utils import (
    add_user_to_db,
    admin_info_db,
    application,
    gipsokarton_key,
    gipsokarton_key_choice_price,
    plitka_key,
    plitka_key_choice_price,
)
from aiogram.types import Message
from decouple import config
from aiogram.types import FSInputFile
from aiogram.methods.edit_message_media import EditMessageMedia
from aiogram import Dispatcher, types

from wrapper_bot import TelegramBotWrapper
from menu import main_menu


TOKEN = config("TOKEN", cast=str, default="–ø—É—Å—Ç–æ")
bot = TelegramBotWrapper(TOKEN)
dp = Dispatcher()


# async def set_commands():
#     commands = [
#         BotCommand(command="start", description="–°—Ç–∞—Ä—Ç"),
#         # BotCommand(command="start_2", description="–°—Ç–∞—Ä—Ç 2"),
#         # BotCommand(command="start_3", description="–°—Ç–∞—Ä—Ç 3"),
#     ]
#     await bot.set_my_commands(commands, BotCommandScopeDefault())


async def main():
    # –ó–∞–ø—É—Å–∫ –ø–æ–ª–ª–∏–Ω–≥–∞
    # await bot.set_my_commands([BotCommand(command="start", description="–ù–∞—á–∞—Ç—å")])
    await dp.start_polling(bot)
    try:
        await dp.start_polling(bot)
    finally:
        await bot.session.close()
    # await set_commands()


from aiogram.types import BotCommand, BotCommandScopeDefault
from aiogram.utils.media_group import MediaGroupBuilder

chat_data = {}

from img import *


@dp.message(Command(commands=["start"]))
async def clear_chat_and_send_welcome(message: types.Message):
    print("Start bot")
    uid = message.from_user.id

    # =================================================================
    # –∑–∞–Ω–µ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É
    ADMIN = config("ADMIN", cast=lambda x: x.split(","), default="–ø—É—Å—Ç–æ")
    if str(uid) not in ADMIN:
        await add_user_to_db(
            user_id=message.from_user.id,
            username=message.from_user.username,
            first_name=message.from_user.first_name,
        )

    # ===============================================================
    #    ----------------- –ê–ª—å–±–æ–º -----------

    # album_builder = MediaGroupBuilder(caption="–û–±—â–∞—è –ø–æ–¥–ø–∏—Å—å –¥–ª—è –±—É–¥—É—â–µ–≥–æ –∞–ª—å–±–æ–º–∞")

    # album_builder.add_photo(media=plitka_sanuzel)
    # album_builder.add_photo(media=plitka_many)
    # album_builder.add_photo(media=peregorodka_gips)
    # await message.answer_media_group(
    #     # –ù–µ –∑–∞–±—É–¥—å—Ç–µ –≤—ã–∑–≤–∞—Ç—å build()
    #     media=album_builder.build()
    # )
    # ----------------------------------------------------------------
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–∞ –∏–∑ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
    # file_ids = []

    # image_from_pc = FSInputFile("viravnivanie_sten.jpg")
    # result = await message.answer_photo(
    #     image_from_pc, caption="–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ —Ñ–∞–π–ª–∞ –Ω–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–µ"
    # )
    # #  –¥–ª—è —Ñ–æ—Ç–æ

    # file_ids.append(result.photo[0].file_id)
    # print(file_ids)

    # image_from_pc = FSInputFile("peregorodka.jpeg")
    # result = await message.answer_photo(
    #     image_from_pc, caption="–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ —Ñ–∞–π–ª–∞ –Ω–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–µ"
    # )
    # #  –¥–ª—è —Ñ–æ—Ç–æ
    # file_ids.append(result.photo[0].file_id)
    # print(file_ids)

    # image_from_pc = FSInputFile("potolok.jpg")
    # result = await message.answer_photo(
    #     image_from_pc, caption="–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ —Ñ–∞–π–ª–∞ –Ω–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–µ"
    # )
    # #  –¥–ª—è —Ñ–æ—Ç–æ
    # file_ids.append(result.photo[0].file_id)
    # print(file_ids)

    # image_from_pc = FSInputFile("stena.gif")
    # result = await message.answer_animation(
    #     image_from_pc, caption="–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ —Ñ–∞–π–ª–∞ –Ω–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–µ"
    # )
    # file_id = result.video.file_id
    # file_ids.append(file_id)
    # # print(result)
    # print(f"File ID: {file_id}")
    # --------------------------------

    # –¥–ª—è –≥–∏—Ñ
    # file_id = result.animation.file_id
    # file_ids.append(file_id)
    # print(f"File ID: {file_id}")

    # ================================================================

    # h = "soobshenie @maxkalinin"
    # await bot.send_message(message.from_user.id, h)

    # –≤—ã–∑–≤–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é

    print("await main_menu(message)")
    await main_menu(message)


# =================================================================
@dp.message(F.text.startswith("üëâ –ü–ª"))
async def plitka(message: types.Message):
    """–°—Ç–æ–∏–º–æ—Å—Ç—å —Ä–∞–±–æ—Ç"""

    await plitka_key(message)


@dp.message(F.text.startswith("üëâ –ì–∏"))
async def gipsokarton(message: types.Message):
    await gipsokarton_key(message)
    # await message.reply("–ì–∏–ø—Å–æ–∫–∞—Ä—Ç–æ–Ω!")


@dp.message(F.text.startswith("üìù –û—Å"))
async def tel(message: types.Message):
    await application(message)


@dp.message(F.text.startswith("‚öôÔ∏è –ò–Ω—Ñ–æ"))
async def info(message: types.Message):
    await admin_info_db(message)
    # await message.reply("–ì–∏–ø—Å–æ–∫–∞—Ä—Ç–æ–Ω!")


# =================================================================


@dp.message(F.text.startswith(("–ü–æ–ª", "–°—Ç–µ–Ω—ã", "–°–∞–Ω—É–∑–µ–ª", "–û–±—ä—ë–º", "‚¨ÖÔ∏è –ù–∞–∑–∞–¥")))
async def plitka(message: types.Message):
    chat_id = message.chat.id

    print(message.text)
    if message.text == ("–ü–æ–ª"):
        key = 1

    elif message.text == ("–°–∞–Ω—É–∑–µ–ª"):
        key = 2
    elif message.text == ("–û–±—ä—ë–º"):
        key = 3
    elif message.text == ("‚¨ÖÔ∏è –ù–∞–∑–∞–¥"):
        key = 4

    await plitka_key_choice_price(message, key=key)


@dp.message(
    F.text.startswith(("–°–æ–∑–¥–∞–Ω–∏–µ ", "–í—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ", "–í–æ–∑–≤–µ–¥–µ–Ω–∏–µ", "–û—Ç–¥–µ–ª–∫–∞", "‚¨ÖÔ∏è –ù–∞–∑–∞–¥"))
)
async def plitka(message: types.Message):

    print(message.text)
    if message.text.startswith("–°–æ–∑–¥–∞–Ω–∏–µ "):
        key = 1

    elif message.text.startswith("–í—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ"):
        key = 2
    elif message.text.startswith("–í–æ–∑–≤–µ–¥–µ–Ω–∏–µ"):
        key = 3
    elif message.text.startswith("–û—Ç–¥–µ–ª–∫–∞"):
        key = 4
    elif message.text == ("‚¨ÖÔ∏è –ù–∞–∑–∞–¥"):
        await main_menu(message)
        return

    # elif message.text == ("‚¨ÖÔ∏è –ù–∞–∑–∞–¥"):
    #     await main_menu(message)
    #     return

    # keyboard = await plitka_key(message)
    # await message.answer(reply_markup=keyboard, text="–í—ã–±–æ—Ä —Ä–∞–±–æ—Ç")
    await gipsokarton_key_choice_price(message, key=key)


# =================================================================


@dp.message(F.text.startswith("–ù–æ–º–µ—Ä"))
async def mail(msg: types.Message):
    TELEPHON = config("TELEPHON", cast=str, default="–ø—É—Å—Ç–æ")
    await msg.answer(TELEPHON)
    # await msg.answer(f"–¢–µ–ª. –º–∞—Å—Ç–µ—Ä–∞: 8(900)111-11-111")

    # mention = (
    #     f'<a href="tg://user?id={msg.from_user.id}">{msg.from_user.first_name}</a>'
    # )
    # h = f'soobshenie <a href="http://t.me/{message.from_user.username}">max</a>'

    mention = (
        f'<a href="http://t.me/{msg.from_user.username}">{msg.from_user.first_name}</a>'
    )
    await bot.send_message(
        5744848801,
        text=f"–ó–∞–ø—Ä–æ—Å –∫–æ–Ω—Ç–∞–∫—Ç–∞ –æ—Ç {mention}\nuser_id {msg.from_user.id}",
        parse_mode="HTML",
    )


# =================================================================


@dp.message(F.contact)
async def func_contact(msg: Message):
    await msg.answer(f"–°–ø–∞—Å–∏–±–æ.–í –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –º—ã –í–∞–º –ø–æ–∑–≤–æ–Ω–∏–º.")
    # await msg.answer(f"–ö–æ–Ω—Ç–∞–∫—Ç:{msg.contact.phone_number}")
    await bot.send_message(5744848801, text=f"–ó–∞–∫–∞–∑")
    await bot.send_message(5744848801, text=f"{msg.contact.phone_number}")

    contact = msg.contact
    phone_number = contact.phone_number
    first_name = contact.first_name
    user_id = contact.user_id
    print(phone_number, "\n", user_id, "\n", first_name)
    mention = (
        f'<a href="http://t.me/{msg.from_user.username}">{msg.from_user.first_name}</a>'
    )
    await bot.send_message(
        5744848801,
        text=f"–ó–∞–ø—Ä–æ—Å –∫–æ–Ω—Ç–∞–∫—Ç–∞ –æ—Ç {mention}\nuser_id {msg.from_user.id}",
        parse_mode="HTML",
    )


# ----------------------------------------------------------------
