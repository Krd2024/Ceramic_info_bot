import sqlite3
from menu import main_menu
from wrapper_bot import TelegramBotWrapper
from aiogram import types
from aiogram import types
from decouple import config
from aiogram.utils.keyboard import ReplyKeyboardBuilder
import aiosqlite
from aiogram.types import (
    ReplyKeyboardMarkup,
    KeyboardButton,
)
from aiogram import types
from img import *
from delete_chat import delete
from aiogram.types import FSInputFile
from text import text_plitka, text_gips


TOKEN = config("TOKEN", cast=str, default="–ø—É—Å—Ç–æ")
bot = TelegramBotWrapper(TOKEN)

chat_data = {}


async def add_user_to_db(user_id, username, first_name):
    async with aiosqlite.connect("db.sqlite3") as conn:
        async with conn.cursor() as cursor:
            await cursor.execute(
                """
                INSERT INTO users (user_id, username, first_name)
                VALUES (?, ?, ?)
                """,
                (user_id, username, first_name),
            )

            await conn.commit()


# =================================================================
# chat_data = {}


async def admin_info_db(message):
    chat_id = message.chat.id

    await delete(chat_id, chat_data)

    with sqlite3.connect("db.sqlite3") as connection:
        cursor = connection.cursor()
        cursor.execute(
            """SELECT username, user_id,first_name,timestamp as time FROM users"""
        )
        res = cursor.fetchall()
        info = ""
        for row in res:
            info += f"\n–ò–º—è:{row[2]}\nUsername:{row[0]}\nId:{row[1]}\n–í—Ä–µ–º—è:{row[3]}\n*"

        # print(info)

        ADMIN = config("ADMIN", cast=lambda x: x.split(","), default="–ø—É—Å—Ç–æ")

        for admin_id in ADMIN:
            # print(admin_id)
            if info == "":
                info = f"–ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π"

            message_info = await bot.send_message(admin_id, info)
            chat_data[chat_id] = {"user_messages": [message_info.message_id]}
        # import asyncio

        # tasks = [bot.send_message(admin_id, info) for admin_id in ADMIN]
        # await asyncio.gather(*tasks)


# =================================================================


async def gipsokarton_key(message: types.Message):
    builder = ReplyKeyboardBuilder()
    list_products = [
        "–°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä–∫–∞—Å–∞ –¥–ª—è –æ–±—ä—ë–º–Ω—ã—Ö –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π",
        "–í—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ —Å—Ç–µ–Ω ",
        "–í–æ–∑–≤–µ–¥–µ–Ω–∏–µ –ø–µ—Ä–µ–≥–æ—Ä–æ–¥–æ–∫",
        "–û—Ç–¥–µ–ª–∫–∞ –ø–æ—Ç–æ–ª–∫–æ–≤",
        "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
        "üìù –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É",
    ]
    # for i in range(1, 5):
    for i in list_products:
        builder.add(
            types.KeyboardButton(text=str(i), parse_mode="HTML", color=(0, 0, 255))
        )
    builder.adjust(1, 3, 2)

    await message.answer(
        text=text_gips,
        reply_markup=builder.as_markup(
            resize_keyboard=True, input_field_placeholder="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é:"
        ),
    )


# =================================================================


async def plitka_key(message: types.Message):
    uid = message.from_user.id
    builder = ReplyKeyboardBuilder()
    list_products = [
        "–ü–æ–ª",
        "–°–∞–Ω—É–∑–µ–ª",
        "–û–±—ä—ë–º",
        "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
        "üìù –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É",
    ]
    # for i in range(1, 5):
    for i in list_products:
        builder.add(types.KeyboardButton(text=str(i)))
    builder.adjust(3, 2)

    await message.answer(
        text=text_plitka,
        reply_markup=builder.as_markup(
            resize_keyboard=True, input_field_placeholder="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é:"
        ),
    )


# =================================================================

# chat_data = {}


async def plitka_key_choice_price(message: types.Message, key=None):

    uid = message.from_user.id
    chat_id = message.chat.id

    # –û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    await delete(chat_id, chat_data)

    # =================================================================
    if key == 1:
        caption = f"–ü–æ–ª ...\n–¶–µ–Ω–∞ –æ—Ç 1800 —Ä—É–±\n"
        message_price = await message.answer_animation(gif_pol, caption=caption)
        chat_data[chat_id] = {"user_messages": [message_price.message_id]}
        return

    elif key == 2:
        caption = f"–°–∞–Ω—É–∑–µ–ª...\n–¶–µ–Ω–∞ –æ—Ç 1800 —Ä—É–±\n"
        media = plitka_sanuzel

    elif key == 3:
        caption = f"–û–±—ä—ë–º...\n–¶–µ–Ω–∞ –æ—Ç 1300 —Ä—É–±\n"
        media = plitka_many

    elif key == 4:
        await delete(chat_id, chat_data)
        await main_menu(message)
        return

    print(message.chat.id)
    print(message.message_id)

    message_price = await bot.send_photo(message.chat.id, photo=media, caption=caption)

    chat_data[chat_id] = {"user_messages": [message_price.message_id]}
    # await bot.send_message(chat_id=message.chat.id, text=text)


# =================================================================
async def application(message: types.Message, key=None):

    contact_button = KeyboardButton(
        text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–π –∫–æ–Ω—Ç–∞–∫—Ç ‚òéÔ∏è", request_contact=True
    )
    contact_admin = KeyboardButton(
        text="–ù–æ–º–µ—Ä –º–∞—Å—Ç–µ—Ä–∞ ‚òéÔ∏è",
    )
    contact_back = KeyboardButton(
        text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
    )
    keyboard = ReplyKeyboardMarkup(
        keyboard=[[contact_button, contact_admin], [contact_back]], resize_keyboard=True
    )

    await message.answer(
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º –∫–æ–Ω—Ç–∞–∫—Ç–æ–º –∏–ª–∏\n–≤–æ–∑–º–∏—Ç–µ –Ω–æ–º–µ—Ä –º–∞—Å—Ç–µ—Ä–∞",
        reply_markup=keyboard,
    )

    # ===================================================================================

    "‚è±Ô∏èü´óü´µüëâ‚öôÔ∏è0Ô∏è‚É£1Ô∏è‚É£2Ô∏è‚É£3Ô∏è‚É£4Ô∏è‚É£5Ô∏è‚É£6Ô∏è‚É£7Ô∏è‚É£8Ô∏è‚É£9Ô∏è‚É£üîü‚ñ™Ô∏è‚òëÔ∏èü´µüëçüîòüìù‚è≥üü¢üî∂‚úîÔ∏è‚ùå‚ö†Ô∏è‚úÖ‚òëÔ∏è"
    "üîò‚ÇΩ¬π‚Å¥‚ÇÅ‚ë∂‚íà‚íâ‚íå‚íç‚íé‚íè‚íê‚íë‚íí‚íì‚íî‚íï‚íñ‚íó‚íò"


async def gipsokarton_key_choice_price(message: types.Message, key=None):

    chat_id = message.chat.id

    # –û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    await delete(chat_id, chat_data)
    # =================================================================
    if key == 1:
        caption = f"üëâ –ö–∞—Ä–∫–∞—Å –º–æ–∂–µ—Ç –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π, —Ç–∞–∫–∏—Ö –∫–∞–∫:\n‚úÖ –°—Ç–µ–Ω—ã\n‚úÖ –ü–æ—Ç–æ–ª–∫–∏\n‚úÖ –ü–µ—Ä–µ–≥–æ—Ä–æ–¥–∫–∏\n‚úÖ –ù–∏—à–∏\n‚úÖ –ü–æ–ª–∫–∏ –∏ –¥–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã\n–¶–µ–Ω–∞ –æ—Ç ... —Ä—É–±"
        media = gips_ob

    elif key == 2:
        caption = f"""üëâ –ë—ã—Å—Ç—Ä—ã–π –∏ —ç–∫–æ–Ω–æ–º–∏—á–Ω—ã–π —Å–ø–æ—Å–æ–± —Å–æ–∑–¥–∞–Ω–∏—è —Ä–æ–≤–Ω—ã—Ö —Å—Ç–µ–Ω —Å –∏–¥–µ–∞–ª—å–Ω–æ–π –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç—å—é.\n–ü–ª—é—Å—ã:\n‚úÖ –ë—ã—Å—Ç—Ä–æ—Ç–∞ –º–æ–Ω—Ç–∞–∂–∞\n‚úÖ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–∫—Ä—ã—Ç—å –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏ –∏ –¥–µ—Ñ–µ–∫—Ç—ã —Å—Ç–µ–Ω—ã\n‚úÖ –ò–¥–µ–∞–ª—å–Ω–∞—è –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç—å –¥–ª—è —Ñ–∏–Ω–∏—à–Ω–æ–π –æ—Ç–¥–µ–ª–∫–∏\n–¶–µ–Ω–∞ –æ—Ç ... —Ä—É–±\n"""
        media = viravnivanie_sten_gips

        # media = viravnivanie_sten_gips

    elif key == 3:
        caption = f"üëâ –ü–ª—é—Å—ã:\n‚úÖ –ë—ã—Å—Ç—Ä–æ—Ç–∞ –º–æ–Ω—Ç–∞–∂–∞\n‚úÖ –ò–¥–µ–∞–ª—å–Ω–∞—è –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç—å –¥–ª—è —Ñ–∏–Ω–∏—à–Ω–æ–π –æ—Ç–¥–µ–ª–∫–∏\n–¶–µ–Ω–∞ –æ—Ç ... —Ä—É–±\n"

        media = peregorodka_gips
    elif key == 4:
        caption = f"üëâ –û—Ç–¥–µ–ª–∫–∞ –ø–æ—Ç–æ–ª–∫–æ–≤...\n–¶–µ–Ω–∞ –æ—Ç ... —Ä—É–±\n"
        media = potolok_gips

    # =================================================================
    # print(message.chat.id)
    # print(message.message_id)

    message_price = await bot.send_photo(message.chat.id, photo=media, caption=caption)
    chat_data[chat_id] = {"user_messages": [message_price.message_id]}
