import asyncio
import random
from aiogram import types, Dispatcher, Router
from aiogram.types import Message, BotCommand, InputFile, CallbackQuery
from aiogram.filters import Command
from aiogram import F

# from utils import add_user_to_db
from aiogram.types import (
    Message,
    InputMediaPhoto,
    InputMedia,
    ContentType,
    InputMediaAnimation,
)

from decouple import config
from delete_chat import delete
from wrapper_bot import TelegramBotWrapper

from aiogram import Dispatcher, types

# from aiogram import MemoryStorage
from decouple import config
from aiogram.utils.keyboard import InlineKeyboardButton, InlineKeyboardMarkup

from aiogram.types import FSInputFile, URLInputFile

from aiogram.methods.edit_message_media import EditMessageMedia

from aiogram.utils.keyboard import ReplyKeyboardBuilder

chat_data = {}


async def main_menu(message: Message, callback=None):
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""

    chat_id = message.chat.id
    await delete(chat_id, chat_data)

    greetings = [
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –Ø –ø–æ–º–æ–≥—É –í–∞–º —É–∑–Ω–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Ä–∞–±–æ—Ç?",
        "–ü—Ä–∏–≤–µ—Ç! –†–∞–¥ –≤–∞—Å –≤–∏–¥–µ—Ç—å! –ó–¥–µ—Å—å –í—ã –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Ä–∞–±–æ—Ç.",
        "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –í—ã –æ–±—Ä–∞—Ç–∏–ª–∏—Å—å –∫ –±–æ—Ç—É –¥–ª—è –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏—è —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç. –£–∫–∞–∂–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–∏–¥ —Ä–∞–±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç.",
        "–î–æ–±—Ä—ã–π –¥–µ–Ω—å! –Ø –∑–¥–µ—Å—å, —á—Ç–æ–±—ã  –ø–æ–∫–∞–∑–∞—Ç—å –í–∞–º —Å—Ç–æ–∏–º–æ—Å—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Ä–∞–±–æ—Ç.",
        "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ù—É–∂–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç? –í—ã–±–µ—Ä–∏—Ç–µ, –∫–∞–∫–æ–π –≤–∏–¥ —Ä–∞–±–æ—Ç –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç, –∏ —è —Å —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º –ø–æ–º–æ–≥—É.",
    ]
    welcome_message = random.choice(greetings)

    print("–ü—Ä–∏—à–ª–æ –≤ main_menu")
    try:
        builder = ReplyKeyboardBuilder()

        kb = [
            "üëâ –ü–ª–∏—Ç–∫–∞",
            "üëâ –ì–∏–ø—Å–æ–∫–∞—Ä—Ç–æ–Ω",
            "üìù –û—Å—Ç–≤–∏—Ç—å –∑–∞—è–≤–∫—É",
        ]
        for text in kb:
            builder.add(types.KeyboardButton(text=text))
        builder.adjust(2, 1)

        if callback is None:
            message_menu = await message.answer(
                welcome_message,
                reply_markup=builder.as_markup(resize_keyboard=True),
            )

        chat_data[chat_id] = {"user_messages": [message_menu.message_id]}

        return
    except Exception as e:
        print(e, "< --- def main_menu")

        # keyboard = types.ReplyKeyboardMarkup(
        #     keyboard=kb,
        #     resize_keyboard=True,
        #     # one_time_keyboard=True,
        #     input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –≤–∏–¥ —Ä–∞–±–æ—Ç",
        # )
        # keyboard.adjust(2)
        # kb = [
        #     types.KeyboardButton(text="üëâ –°—Ç–æ–∏–º–æ—Å—Ç—å —Ä–∞–±–æ—Ç –ø–æ —É–∫–ª–∞–¥–∫–∏ –ø–ª–∏—Ç–∫–∏* "),
        #     types.KeyboardButton(text="üëâ –ì–∏–ø—Å–æ–∫–∞—Ä—Ç–æ–Ω"),
        #     types.KeyboardButton(text=f"üìù –û—Å—Ç–≤–∏—Ç—å –∑–∞—è–≤–∫—É"),
        # ]
